/**
 * @leizm/web 中间件基础框架 - 内置模块
 * @author Zongmin Lei <leizongmin@gmail.com>
 */
/// <reference types="node" />
import { IncomingMessage, ServerResponse, OutgoingHttpHeaders } from "http";
export interface ProxyTarget {
    /** 协议，默认 http: */
    protocol?: "http:" | "https:";
    /** 端口，默认 80 */
    port?: string | number;
    /** 地址 */
    hostname: string;
    /** 路径 */
    path: string;
    /** 额外的请求头 */
    headers?: OutgoingHttpHeaders;
    /** 请求超时时间 ms */
    timeout?: number;
}
/**
 * 解析 URL
 *
 * @param url
 */
export declare function parseProxyTarget(url: string): ProxyTarget;
/**
 * 代理 HTTP 请求
 *
 * @param req
 * @param res
 * @param target
 */
export declare function proxyRequest(req: IncomingMessage, res: ServerResponse, target: string | ProxyTarget): Promise<void>;
