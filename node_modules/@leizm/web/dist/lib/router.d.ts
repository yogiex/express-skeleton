/**
 * @leizm/web 中间件基础框架
 * @author Zongmin Lei <leizongmin@gmail.com>
 */
import { Core } from "./core";
import { MiddlewareHandle } from "./define";
import { Context } from "./context";
import { Request } from "./request";
import { Response } from "./response";
export declare class Router<C extends Context = Context<Request, Response>> extends Core<C> {
    /**
     * 处理所有请求方法的请求
     *
     * @param route 路由规则
     * @param handles 处理函数
     */
    all(route: string | RegExp, ...handles: MiddlewareHandle<C>[]): void;
    /**
     * 处理GET请求方法的请求
     *
     * @param route 路由规则
     * @param handles 处理函数
     */
    get(route: string | RegExp, ...handles: MiddlewareHandle<C>[]): void;
    /**
     * 处理HEAD请求方法的请求
     *
     * @param route 路由规则
     * @param handles 处理函数
     */
    head(route: string | RegExp, ...handles: MiddlewareHandle<C>[]): void;
    /**
     * 处理POST请求方法的请求
     *
     * @param route 路由规则
     * @param handles 处理函数
     */
    post(route: string | RegExp, ...handles: MiddlewareHandle<C>[]): void;
    /**
     * 处理PUT请求方法的请求
     *
     * @param route 路由规则
     * @param handles 处理函数
     */
    put(route: string | RegExp, ...handles: MiddlewareHandle<C>[]): void;
    /**
     * 处理DELETE请求方法的请求
     *
     * @param route 路由规则
     * @param handles 处理函数
     */
    delete(route: string | RegExp, ...handles: MiddlewareHandle<C>[]): void;
    /**
     * 处理CONNECT请求方法的请求
     *
     * @param route 路由规则
     * @param handles 处理函数
     */
    connect(route: string | RegExp, ...handles: MiddlewareHandle<C>[]): void;
    /**
     * 处理OPTIONS请求方法的请求
     *
     * @param route 路由规则
     * @param handles 处理函数
     */
    options(route: string | RegExp, ...handles: MiddlewareHandle<C>[]): void;
    /**
     * 处理TRACE请求方法的请求
     *
     * @param route 路由规则
     * @param handles 处理函数
     */
    trace(route: string | RegExp, ...handles: MiddlewareHandle<C>[]): void;
    /**
     * 处理PATCH请求方法的请求
     *
     * @param route 路由规则
     * @param handles 处理函数
     */
    patch(route: string | RegExp, ...handles: MiddlewareHandle<C>[]): void;
}
