"use strict";
/**
 * @leizm/web 中间件基础框架 - 内置中间件
 * @author Zongmin Lei <leizongmin@gmail.com>
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.proxy = exports.DEFAULT_PROXY_REMOVE_HEADER_NAMES = void 0;
const path = require("path");
const proxy_request_1 = require("../module/proxy.request");
/** 默认要删除的代理请求头 */
exports.DEFAULT_PROXY_REMOVE_HEADER_NAMES = ["host"];
/**
 * proxy 中间件
 *
 * @param options
 */
function proxy(options) {
    const baseTarget = typeof options.target === "string" ? proxy_request_1.parseProxyTarget(options.target) : { ...options.target };
    const removeHeaderNames = options.removeHeaderNames || exports.DEFAULT_PROXY_REMOVE_HEADER_NAMES;
    return function (ctx) {
        const originalHeaders = { ...ctx.request.headers };
        for (const n of removeHeaderNames) {
            delete originalHeaders[n];
        }
        const target = {
            ...baseTarget,
            path: path.join(baseTarget.path, ctx.request.url),
            headers: { ...originalHeaders, ...baseTarget.headers },
        };
        proxy_request_1.proxyRequest(ctx.request.req, ctx.response.res, target).catch((err) => {
            ctx.next(err);
        });
    };
}
exports.proxy = proxy;
