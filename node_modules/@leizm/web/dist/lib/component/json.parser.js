"use strict";
/**
 * @leizm/web 中间件基础框架 - 内置中间件
 * @author Zongmin Lei <leizongmin@gmail.com>
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.jsonParser = exports.DEFAULT_JSON_PARSER_OPTIONS = void 0;
exports.DEFAULT_JSON_PARSER_OPTIONS = {
    /* 默认100k */
    limit: 102400,
};
/**
 * 快速的 JSON Body 解析中间件
 * @param options 选项
 */
function jsonParser(options = {}) {
    const opts = { ...exports.DEFAULT_JSON_PARSER_OPTIONS, ...options };
    return function (ctx) {
        if (ctx.request.method === "GET" || ctx.request.method === "HEAD")
            return ctx.next();
        if (String(ctx.request.headers["content-type"]).indexOf("application/json") === -1)
            return ctx.next();
        const list = [];
        let size = 0;
        let isAborted = false;
        function checkLimit() {
            if (size > opts.limit) {
                ctx.request.req.pause();
                isAborted = true;
                ctx.next(new Error(`jsonParser: out of max body size limit`));
            }
        }
        ctx.request.req.on("data", (chunk) => {
            list.push(chunk);
            size += chunk.length;
            checkLimit();
        });
        ctx.request.req.on("end", () => {
            checkLimit();
            if (isAborted)
                return;
            const buf = Buffer.concat(list);
            try {
                const json = JSON.parse(buf.toString());
                ctx.request.body = json;
                return ctx.next();
            }
            catch (err) {
                return ctx.next(new Error(`jsonParser: ${err.message}`));
            }
        });
    };
}
exports.jsonParser = jsonParser;
