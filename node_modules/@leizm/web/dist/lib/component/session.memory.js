"use strict";
/**
 * @leizm/web 中间件基础框架 - 内置中间件
 * @author Zongmin Lei <leizongmin@gmail.com>
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SessiionMemoryStore = void 0;
const session_1 = require("./session");
class SessiionMemoryStore {
    constructor() {
        this.data = new Map();
    }
    isExpired(expires) {
        return expires.getTime() < Date.now();
    }
    get(sid) {
        return new Promise((resolve, reject) => {
            const data = this.data.get(sid);
            if (!data)
                return resolve({});
            if (this.isExpired(data.expires)) {
                this.data.delete(sid);
                return resolve({});
            }
            resolve(session_1.DEFAULT_SESSION_UNSERIALIZE(data.value));
        });
    }
    set(sid, data, maxAge) {
        return new Promise((resolve, reject) => {
            const expires = new Date(Date.now() + maxAge);
            this.data.set(sid, { expires, value: session_1.DEFAULT_SESSION_SERIALIZE(data) });
            resolve();
        });
    }
    destroy(sid) {
        return new Promise((resolve, reject) => {
            this.data.delete(sid);
            resolve();
        });
    }
    touch(sid, maxAge) {
        return new Promise((resolve, reject) => {
            const data = this.data.get(sid);
            if (data) {
                data.expires = new Date(data.expires.getTime() + maxAge);
                this.data.set(sid, data);
            }
            resolve();
        });
    }
}
exports.SessiionMemoryStore = SessiionMemoryStore;
