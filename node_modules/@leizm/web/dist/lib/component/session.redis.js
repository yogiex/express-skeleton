"use strict";
/**
 * @leizm/web 中间件基础框架 - 内置中间件
 * @author Zongmin Lei <leizongmin@gmail.com>
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SessiionRedisStore = exports.DEFAULT_REDIS_PREFIX = void 0;
const session_1 = require("./session");
const simple_redis_1 = require("../module/simple.redis");
/** 默认Redis Key前缀 */
exports.DEFAULT_REDIS_PREFIX = "sess:";
/** 将毫秒转换为秒 */
function msToS(ms) {
    return Math.ceil(ms / 1000);
}
class SessiionRedisStore {
    constructor(options) {
        this.options = options;
        this.keyPrefix = options.prefix || exports.DEFAULT_REDIS_PREFIX;
        this.client = options.client || new simple_redis_1.SimpleRedisClient(options);
        this.serialize = options.serialize || session_1.DEFAULT_SESSION_SERIALIZE;
        this.unserialize = options.unserialize || session_1.DEFAULT_SESSION_UNSERIALIZE;
    }
    getKey(key) {
        return this.keyPrefix + key;
    }
    get(sid) {
        return new Promise((resolve, reject) => {
            this.client.get(this.getKey(sid), (err, ret) => {
                if (err)
                    return reject(err);
                try {
                    resolve(this.unserialize(ret));
                }
                catch (err) {
                    return reject(err);
                }
            });
        });
    }
    set(sid, data, maxAge) {
        return new Promise((resolve, reject) => {
            this.client.setex(this.getKey(sid), msToS(maxAge), this.serialize(data), (err, ret) => {
                if (err)
                    return reject(err);
                resolve();
            });
        });
    }
    destroy(sid) {
        return new Promise((resolve, reject) => {
            this.client.del(this.getKey(sid), (err, ret) => {
                if (err)
                    return reject(err);
                resolve();
            });
        });
    }
    touch(sid, maxAge) {
        return new Promise((resolve, reject) => {
            this.client.expire(this.getKey(sid), msToS(maxAge), (err, ret) => {
                if (err)
                    return reject(err);
                resolve();
            });
        });
    }
}
exports.SessiionRedisStore = SessiionRedisStore;
