/**
 * @leizm/web 中间件基础框架 - 内置中间件
 * @author Zongmin Lei <leizongmin@gmail.com>
 */
import { Context } from "../context";
import { MiddlewareHandle, CookieOptions } from "../define";
/**
 * Session中间件
 * 注意：需要依赖cookieParser中间件，否则无法正确取得sessionId
 */
export declare function session(options?: SessionOptions): MiddlewareHandle<Context>;
/** 用于生成SessionId的函数 */
export declare type GenerateSessionIdFunction = (ctx: Context) => string;
/** Session中间件初始化选项 */
export interface SessionOptions {
    /** 存储引擎实例 */
    store?: SessionStore;
    /** Cookie名称 */
    name?: string;
    /** Cookie选项 */
    cookie?: CookieOptions;
    /** 生成SessionId的函数 */
    genid?: GenerateSessionIdFunction;
    /** Session有效时间（单位：毫秒），此参数会覆盖cookie中的maxAge */
    maxAge?: number;
}
export interface SessionStore {
    /**
     * 获取session
     * @param sid
     */
    get(sid: string): Promise<Record<string, any>>;
    /**
     * 设置session
     * @param sid
     * @param data
     * @param maxAge
     */
    set(sid: string, data: Record<string, any>, maxAge: number): Promise<void>;
    /**
     * 销毁Session
     * @param sid
     */
    destroy(sid: string): Promise<void>;
    /**
     * 保持session激活
     * @param sid
     * @param maxAge
     */
    touch(sid: string, maxAge: number): Promise<void>;
}
export declare class SessionInstance {
    readonly ctx: Context;
    readonly id: string;
    readonly cookieName: string;
    readonly store: Required<SessionStore>;
    readonly maxAge: number;
    protected _data: Record<string, any>;
    protected _hash: string;
    protected _isDestroy: boolean;
    constructor(ctx: Context, id: string, options: Required<SessionOptions>);
    get data(): Record<string, any>;
    set data(v: Record<string, any>);
    regenerate(): Promise<void>;
    destroy(): Promise<void>;
    reload(): Promise<void>;
    save(): Promise<void>;
    forceSave(): Promise<void>;
    touch(): Promise<void>;
}
export declare function getDataHash(data: any): string;
/** 默认生成SessionId的函数 */
export declare const DEFAULT_SESSION_GENID: GenerateSessionIdFunction;
/** 默认SessionId存储于Cookie的名称 */
export declare const DEFAULT_SESSION_NAME = "web.sid";
/** 默认Cookie选项 */
export declare const DEFAULT_SESSION_COOKIE: CookieOptions;
/** 默认Session MaxAge */
export declare const DEFAULT_SESSION_MAX_AGE = 0;
/** 默认Session中间件选项 */
export declare const DEFAULT_SESSION_OPTIONS: Required<SessionOptions>;
/** Session数据序列化函数 */
export declare type SessionDataSerializeFunction = (data: any) => string;
/** Session数据反序列化函数 */
export declare type SessionDataUnSerializeFunction = (data: string) => any;
/** 默认Session数据序列化函数 */
export declare const DEFAULT_SESSION_SERIALIZE: (data: any) => string;
/** 默认Session数据反序列化函数 */
export declare const DEFAULT_SESSION_UNSERIALIZE: (data: string) => any;
