"use strict";exports.pathToKeys=(e=>e.replace(/([^\.])\[/g,(e,t)=>`${t}.[`).split(".").map(e=>{const t=e.match(/^\[(\d+)\]$/);return t?+t[1]:e})),exports.addPrototype=((e,t,r)=>{const o=e.prototype;o.hasOwnProperty(t)||Object.defineProperty(o,t,{value(...e){return r.apply(0,[this].concat(e))},writable:!0})}),exports.filter=((e,t,r)=>{if(t){const o=exports.pathToKeys(t),n=e=>o.reduce((e,t)=>e[t],e);return e.filter((e,t,o)=>r(n(e),t,o))}return e.filter(r)}),exports.deepClone=(e=>{if("object"!=typeof e)return e;if(e instanceof Date)return new Date(e.getTime());const t=Object.assign({},e);return Object.keys(t).forEach(r=>t[r]="object"==typeof e[r]?exports.deepClone(e[r]):e[r]),Array.isArray(e)?(t.length=e.length,Array.from(t)):t});