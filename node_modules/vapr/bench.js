'use strict';
const nodemark = require('nodemark');
const benchmark = (n, f) => console.log(`${n} x ${nodemark(f, setup).toString('nanoseconds')}`);

let arg, result, logged;
const setup = () => {
	const r = Math.random();
	if (r < 0.04) {
		arg = new Error('foobar');
	} else if (r < 0.24) {
		arg = 204;
	} else if (r < 0.44) {
		arg = [201, [Buffer.from('hello world')]];
	} else {
		arg = [[Buffer.from('hello world')]];
	}
};

const Response = require('./lib/state/response');

const newResponse1 = (value) => {
	if (typeof value === 'number' || Array.isArray(value)) {
		try { return new Response(value); }
		catch (err) { value = err; }
	}
	if (Response.isResponse(value)) return value;
	return new Response(value);
};

const newResponse2 = (value) => {
	if (Response.isResponse(value)) return value;
	try { return new Response(value); }
	catch (err) { return new Response(err); }
};

benchmark('newResponse2', () => { result = newResponse2(arg); });
benchmark('newResponse1', () => { result = newResponse1(arg); });
console.log(result, logged);
