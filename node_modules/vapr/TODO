- write all necessary plugins
- write tests for vapr and plugins
- write readme for vapr and plugins
- v1.0.0 for vapr and plugins
- update dependencies
- write examples in docs
- publish vapr and plugins
- write wise-trace, and add it as an optional dependency in development mode only

NOTE:
Ideally, when 'expect: 100-continue' is sent, the request.body() method will
emit res.writeContinue(), as long as it doesn't throw. Unforunately, this is
handled by http.Server, not the request handler. If a module is created to wrap
around http.Server, is should also handle 'upgrade' events, and the methods that
are expected of http.Server.

========== PLUGINS ==========

vapr-json
- convenience plugin for json apps

vapr-trailers
- determine whether or not to send trailers
- based on TE (and maybe req.version) (https://tools.ietf.org/html/rfc7230#section-4.3)

vapr-language
- TBD (relevant headers: Accept-Language, Content-Language)

vapr-charset
- TBD (relevant headers: Accept-Charset, possibly Content-Type)

vapr-conditions
- should be able to trigger a 304 and/or 412 response
- should possibly react to If-Match (https://tools.ietf.org/html/rfc7232#section-3.1)
- should possibly react to If-None-Match (https://tools.ietf.org/html/rfc7232#section-3.2)
- should possibly react to If-Modified-Since (https://tools.ietf.org/html/rfc7232#section-3.3)
- should possibly react to If-Unmodified-Since (https://tools.ietf.org/html/rfc7232#section-3.4)

Caching: https://tools.ietf.org/html/rfc7234
Cookies: https://tools.ietf.org/html/rfc6265
query parameter plugin
limit() river method, with option for operating on bytes instead of items (vapr-no-input, vapr-limit)
catch()/else()/transformError() river method that returns a river (to transform LimitError/TimeoutError)
